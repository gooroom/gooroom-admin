<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
	
	<http pattern="/css/**" security="none" />
	<http pattern="/img/**" security="none" />
	<http pattern="/images/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/plugins/**" security="none" />
	<http pattern="/vendor/**" security="none" />
	<http pattern="/notice/**" security="none" />
	<http pattern="/apis/notices/**" security="none" />
	<http pattern="/portable/updateData*" security="none" />
	<http pattern="/portable/updateImageList*" security="none" />

	<http pattern="/samples/**" security="none" />	
 
	<http auto-config="true" use-expressions="true" disable-url-rewriting="true" >
		
		<access-denied-handler error-page="/login?s=fail&amp;e=E21" />
		
		<csrf disabled="true" />
 
		<intercept-url pattern="/login*" access="hasRole('ROLE_ANONYMOUS')" />
		<intercept-url pattern="/refuse*" access="hasRole('ROLE_ANONYMOUS')" />
		<intercept-url pattern="/v1/**" access="hasRole('ROLE_ANONYMOUS')" />
		<intercept-url pattern="/testtr*" access="hasRole('ROLE_ANONYMOUS')" />

 		<intercept-url pattern="/super*" access="hasRole('ROLE_SUPER')" />
 		<intercept-url pattern="/home*" access="hasRole('ROLE_ADMIN')" />
 		<intercept-url pattern="/part*" access="hasRole('ROLE_PART')" />
		<intercept-url pattern="/portable*" access="hasAnyRole('ROLE_PART', 'ROLE_USER')" />
		<intercept-url pattern="/**" access="hasAnyRole('ROLE_SUPER', 'ROLE_ADMIN', 'ROLE_PART', 'ROLE_USER')" />

 		<custom-filter after="BASIC_AUTH_FILTER" ref="customCookieFilter" />
 		 
		<custom-filter ref="requestContextFilter" before="FORM_LOGIN_FILTER" />
		<form-login login-page="/login" 
					username-parameter="userId" 
					password-parameter="userPw"		
					default-target-url="/" 
					authentication-failure-handler-ref="customAuthenticationFailureHandler"
					authentication-success-handler-ref="customAuthenticationSuccessHandler"
					always-use-default-target="true"
					/>
 		
 		<logout invalidate-session="true" logout-url="/logout" success-handler-ref="customLogoutSuccessHandler" />
		
		<custom-filter ref="ajaxTimeoutRedirectFilter" after="EXCEPTION_TRANSLATION_FILTER"/>	

		<session-management invalid-session-url="/login">
    		<concurrency-control session-registry-alias="sessionRegistry" />
		</session-management>

	</http>
	
	<context:component-scan base-package="kr.gooroom" />
	<context:annotation-config />
	
	<!-- ajax 세션처리를 위한 필터 선언 -->
	<beans:bean id="ajaxTimeoutRedirectFilter" class="kr.gooroom.spring.security.AjaxTimeoutRedirectFilter">
    	<beans:property name="customSessionExpiredErrorCode" value="944"/>
	</beans:bean>
	
	<beans:bean id="customCookieFilter" class="kr.gooroom.spring.security.CustomCookieFilter"/>
	
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
	
	<beans:bean id="requestContextFilter" class="org.springframework.web.filter.RequestContextFilter" />
	
	<beans:bean id="customAuthenticationProvider" class="kr.gooroom.gpms.login.CustomAuthenticationProvider" />
	<beans:bean id="userLoginService" class="kr.gooroom.gpms.login.UserLoginService" />
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg name="strength" value="256"></beans:constructor-arg>
	</beans:bean>
	<beans:bean id="customAuthenticationFailureHandler" class="kr.gooroom.gpms.login.CustomAuthenticationFailureHandler" />
	<beans:bean id="customAuthenticationSuccessHandler" class="kr.gooroom.gpms.login.CustomAuthenticationSuccessHandler" />
	<beans:bean id="customLogoutSuccessHandler" class="kr.gooroom.gpms.logout.CustomLogoutSuccessHandler" />

    <authentication-manager alias="authenticationManager">
    	<authentication-provider ref="customAuthenticationProvider">
        </authentication-provider>
    </authentication-manager>

</beans:beans>
